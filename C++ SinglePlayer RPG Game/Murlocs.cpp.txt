#include "Murlocs.h"
#include <iostream>
using namespace  std;



Murlocs :: Murlocs(int hl , int b_Damage) : Enemy(hl,b_Damage)
{}



void  Murlocs::Take_Damage(int damage)
{
   if( health > 0 )
   {

     health = health - (damage + life_decreased) ;
     attacked_damage = damage;
     if (health < 50)
     {
      // Health Regeneration
       if ( noOfTime > 0 )
        {
         health = health + regenrable_Health;
         cout<<"                                   Health Of Murlocs Regenerated by 15"<<endl;
         noOfTime --;
        }
     }
     is_PlayerAttacked = true;
     
     // Health Stats of Enemy
     cout<<"                                         Murlocs recived "<<damage<<" damage"<<endl;
     
     // Show Ciritcal Damage
     if(damage > 30)
     {
       cout<<"                                       Critical Damage to Murlocs Well Done Player :) "<<endl;
     }

     // Make Sure Printing health only when alive
     if(health > 0)
     {
     cout<<"                                         Health of Murlocs is now "<<health<<endl;
     }
     else 
     {
       cout<<"                                         Health of Murlocs is 0 "<<endl;
       cout<<"                                         Murlocs Died :)"<<endl;
     }
  }
}


void Murlocs::RocketPunch(Player &player, Murlocs mur)
{
  if (getEnemyHealth() > 0 )
  {
    // Execute on based on Probability We Pass
    srand(time(NULL));

    int randProbability = 1 + rand() % 10;

    if (randProbability < 7)
    {
      if(player.getHealth() > 0 )
      {
        cout<<"\n                            Murlocs is activating Rocket Punch Be Prepared"<<endl;
        player.TakeDamage(rocket_PunchDamage,mur,Murlocs_Type);
      }
      else 
      {
        cout<<"                                     Player is Already Dead"<<endl;
      }

    }   
    else
    {
      cout<<"\n                     Murlocs Miss his Special Attack!!!!Caution he wont miss twice :("<<endl;

    }
  }
}